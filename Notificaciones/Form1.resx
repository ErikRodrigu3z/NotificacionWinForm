<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABMLAAATCwAAAAAAAAAA
        AABGvXFtRr1x6Ua9ce9GvXHpRr1x6Ua9ceZGvXHnRr1x6Ua9celGvXHpRr1x6Ua9celGvXHpRr1x70a9
        celGvXFtRr1x5ka9cZ5GvXE2Rr1xLka9cS9HuXBcR7pwSUa9cS1GvXEuRr1xLka9cS5GvXEuRr1xLEa9
        cTJGvXGdRr1x5ka9cd5GvXEmRr1xAEexbgBHsm4PRrtwxUa6cIdFzXYASppnAAAAAABLpWsAVXBfAEe1
        bypHt3BpR7lwSUa9cd5GvXHTRr1xGka9cQBIsG0ASadrA0a6cIxGu3CaQv+IAEmiagA//4IASLNvH0e5
        cIFGu3HhRr1x/0a6cKVGvXHSRr1x00a9cRpGvXEAAAAAAEa7cABGunBKRrtwlETlfgBIsW4PR7hwZ0a6
        cM1HunCyRrpwlka8cfFGunCQRr1x0ka9cdNGvXEaRr1xAAAAAABGu3AARrpwSka6cJxHt29JRrpwtEa6
        cMJHuHBdSbBuDEiybgtItG84R7lwKka9cdRGvXHTRr1xGkutbhNJtHBLSbZweki4cLBHu3HrRrxx80e6
        cN1Js29gS6puEEe6cQBUhGQARr1xAEa9cRtGvXHURr1x0Ue4cFdHunDIR7tx7Em3ca5MsXC5TbJxiky0
        co5IunHJRrxx9Ue6cMNHtm82R7pwAEa9cQBGvXEbRr1x1Ea9cdBHuXCVRr1x/0i6ccJTqXIsUqlxUFCr
        cVlRqXE1TLRyUEa8cfVGvXH/R7lwb0bBcgBGvXEARr1xG0a9cdRGvXHSR7hwMEe3cHtHuXDDSrVxrU6x
        cpVMsnG2TLJxp0i4ccJHunDHR7dwdkiybhJItG8ARr1xAEa9cRtGvXHURr1x00a9cRo083oATKtuEUux
        cCtIt3B4R7pwsUuycEJLsXAsTaluD1t7ZgFVkGoAAAAAAEa9cQBGvXEbRr1x1Ea9cdNGvXEaRr1xAAAA
        AABGu3AARrpwSka6cJQ+/5kASKBoAAAAAAAAAAAAAAAAAAAAAABGvXEARr1xG0a9cdRGvXHTRr1xGka9
        cQAAAAAARrtwAEa6cEpGunClSLFuCEezbgAAAAAAAAAAAAAAAAAAAAAARr1xAEa9cRtGvXHURr1x2ka9
        cSBGvXEAAAAAAEa6cABHuXBERrxx6Ea4cDxGunAAAAAAAAAAAAAAAAAAAAAAAEa9cQBGvXEhRr1x20a9
        ceNGvXF/Rr1xGka9cRVGvnEUR7lwLEe5cIpHunAxRr1xFEa9cRVGvXEVRr1xFUa9cRVGvXEaRr1xgEa9
        ceNGvXFuRr1x4ka9cdVGvXHMRr1xzEa9cctGvXHJRr1xy0a9ccxGvXHMRr1xzEa9ccxGvXHMRr1x1Ua9
        ceNGvXFuAAAAAAAAAAAx4AAAMcAAADkAAAA4AAAAABwAAAAMAAAADAAAAAwAACAcAAA5/AAAOPwAADj8
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>